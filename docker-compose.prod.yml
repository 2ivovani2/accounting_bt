version: '3.8'

services:
  web:
    build:
      context: ./tmp
      dockerfile: Dockerfile.prod
    restart: always
    command: uvicorn tmp.asgi:application --host 0.0.0.0 --port 8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - ./tmp/main:/usr/src/app/main
      - ./tmp/applier:/usr/src/app/applier
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db

  db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db

  telegram-webhook-updater:
    build: ./webhook_updater
    env_file:
      - ./.env.prod
    depends_on:
      - web
    
  nginx:
    build: ./nginx
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - static_volume:/home/app/web/staticfiles    
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

volumes:
  static_volume:
